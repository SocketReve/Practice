/*! farmacia Grunt 28-10-2014 */
angular.module("PracticeSimulator").factory("Graph2",function($q,$timeout,$window,$sanitize){function getNodeHTMLLabel(id,description,type,provider,mem,risk,func){var htmlTemplate="<div class='customNode'>";return htmlTemplate+="<span class='type "+$sanitize(type)+"'> </span>",htmlTemplate+="<span class='name'>"+camelCase($sanitize(id))+"</span>",htmlTemplate+="<span class='description'>"+$sanitize(description)+"</span>",htmlTemplate+="<span class='provider'>"+$sanitize(provider.toUpperCase())+"</span>",htmlTemplate+="<span class='mem'>"+$sanitize(mem)+("COMP"==type?" | "+$sanitize(func):"")+"</span>",htmlTemplate+="<span class='risk'>"+$sanitize(risk)+"</span>",htmlTemplate+="</div>"}function camelCase(input){return input.replace(/ (.)/g,function(match,group1){return group1.toUpperCase()})}var g,renderer,zoom,svg,layout,model,scale=.9,scaleOnParameter=.8,Graph=function(nodes,edges){var defer=$q.defer();return angular.element(document).ready(function(){defer.resolve(),svg=d3.select("svg"),centerG=svg.append("g"),zoomG=centerG.append("g"),zoom=dagreD3.zoom.panAndZoom(d3.select("svg g g")),renderer=new dagreD3.Renderer,dagreD3.zoom(svg,zoom),layout=dagreD3.layout().nodeSep(70).rankSep(120).rankDir("LR"),g=new dagreD3.Digraph({multigraph:!0});var oldDrawEdgesPath=renderer.drawEdgePaths();renderer.drawEdgePaths(function(graph,root){var svgEdges=oldDrawEdgesPath(graph,root);return svgEdges.attr("id",function(edge){return edge}),svgEdges.attr("time",function(edge){return g.edge(edge).label}),svgEdges.attr("from",function(edge){return g.edge(edge).from}),svgEdges.attr("to",function(edge){return g.edge(edge).to}),svgEdges.attr("class",function(edge){return"edgePath enter "+(g.edge(edge).highlight?"green":"")}),svgEdges});var oldDrawNodes=renderer.drawNodes();renderer.drawNodes(function(graph,root){var svgNodes=oldDrawNodes(graph,root);return svgNodes.attr("id",function(u){return u}),svgNodes.select("rect").attr("class",function(u){return g.node(u).highlight?"green":""}),svgNodes});for(var i=0;i<nodes.length;i++)g.addNode(camelCase(nodes[i].id.trim()),{labelType:"html",label:getNodeHTMLLabel(nodes[i].id,nodes[i].descr,nodes[i].type,nodes[i].provider,nodes[i].mem,nodes[i].risk,nodes[i].func),descr:nodes[i].descr,type:nodes[i].type,provider:nodes[i].provider.toUpperCase(),mem:parseInt(nodes[i].mem),risk:parseFloat(nodes[i].risk),func:nodes[i].func,highlight:!1});for(var i=0;i<edges.length;i++)g.addEdge(camelCase(edges[i].u)+"-"+camelCase(edges[i].v)+"-"+edges[i].time.toString(),edges[i].u,edges[i].v,{label:edges[i].time.toString(),from:camelCase(edges[i].u),to:camelCase(edges[i].v),highlight:!1});renderer.layout(layout),model=renderer.run(g,d3.select("svg g g")),Graph.resize()}),angular.element($window).bind("resize",function(){Graph.resize()}),defer.promise};return Graph.getRawNode=function(node){return g.node(node)},Graph.setNodeDescription=function(id,description){var temp=g.node(id);g.node(id).descr=description,g.node(id).label=getNodeHTMLLabel(id,description,temp.type,temp.provider,temp.mem,temp.risk,temp.func)},Graph.setNodeMem=function(id,mem){var temp=g.node(id);g.node(id).mem=mem,g.node(id).label=getNodeHTMLLabel(id,temp.descr,temp.type,temp.provider,mem,temp.risk,temp.func)},Graph.setNodeProvider=function(id,provider){var temp=g.node(id);g.node(id).provider=provider,g.node(id).label=getNodeHTMLLabel(id,temp.descr,temp.type,provider,temp.mem,temp.risk,temp.func)},Graph.setNodeType=function(id,type){var temp=g.node(id);g.node(id).type=type,g.node(id).label=getNodeHTMLLabel(id,temp.descr,type,temp.provider,temp.mem,temp.risk,temp.func)},Graph.setNodeFunc=function(id,func){var temp=g.node(id);g.node(id).func=func,g.node(id).label=getNodeHTMLLabel(id,temp.descr,temp.type,temp.provider,temp.mem,temp.risk,func)},Graph.resize=function(){var graphWidth=model.graph().width+5,graphHeight=model.graph().height+5,width=parseInt(svg.style("width").replace(/px/,"")),height=parseInt(svg.style("height").replace(/px/,"")),zoomScale=Math.min(width/graphWidth*scale,height/graphHeight*scale),translate=[width/2-graphWidth*zoomScale/2+10,height/2-graphHeight*zoomScale/2];zoom.translate(translate),zoom.scale(zoomScale),zoom.event(svg.transition().duration(500))},Graph.addNode=function(id,description,type,provider,mem,risk,func){try{g.addNode(camelCase(id.trim()),{labelType:"html",label:getNodeHTMLLabel(id,description,type,provider,mem,risk,func),descr:description,type:type,provider:provider.toUpperCase(),mem:parseInt(mem),risk:parseFloat(risk),func:func,highlight:!1})}catch(err){throw{message:"Node already in graph or input not valid"}}this.redesign(),$timeout(function(){Graph.scale("parameters")},500)},Graph.addEdge=function(source,target,time){try{g.addEdge(camelCase(source)+"-"+camelCase(target)+"-"+time.toString(),camelCase(source),camelCase(target),{label:time.toString(),from:camelCase(source),to:camelCase(target),highlight:!1})}catch(err){throw{message:"Edge is already in the graph or input not valid"}}this.redesign()},Graph.removeNode=function(id){try{g.delNode(id)}catch(err){throw{message:"Node not exists or input not valid"}}this.redesign()},Graph.removeEdge=function(id){try{g.delEdge(id)}catch(err){throw{message:"Communication not exists"}}this.redesign()},Graph.redesign=function(){renderer.transition(function(selection){return selection.transition().duration(500)}),model=renderer.run(g,d3.select("svg g g"))},Graph.getElements=function(){return dagreD3.json.encode(g)},Graph.scale=function(scaleMod){var translate,graphWidth=model.graph().width+5,graphHeight=model.graph().height+5,width=parseInt(svg.style("width").replace(/px/,"")),height=parseInt(svg.style("height").replace(/px/,""));if("original"==scaleMod){var zoomScale=Math.min(width/graphWidth*scale,height/graphHeight*scale);translate=[width/2-graphWidth*zoomScale/2+10,height/2-graphHeight*zoomScale/2]}else if("parameters"==scaleMod){var zoomScale=Math.min(width/graphWidth*scaleOnParameter,height/graphHeight*scaleOnParameter);translate=[graphWidth/3,height/2-graphHeight*zoomScale/2]}zoom.translate(translate),zoom.scale(zoomScale),zoom.event(svg.transition().duration(500))},Graph.highlightEdge=function(edge,activate){g.edge(edge).highlight=1==activate?!0:!1},Graph.highlightNode=function(node,activate){g.node(node).highlight=1==activate?!0:!1},Graph.resetHighlight=function(){for(var nodes=document.querySelectorAll("rect"),edges=document.querySelectorAll(".edgePath"),i=0;i<nodes.length;i++)angular.element(nodes[i]).removeClass("green");for(var i=0;i<edges.length;i++)angular.element(edges[i]).removeClass("green")},Graph}),angular.module("PracticeSimulator").service("PracticeCOMPFunctions",function(){var PracticeCOMPFunctions={};return PracticeCOMPFunctions.SUM=function(array){for(var somma=0,i=0;i<array.length;i++)somma+=array[i];return somma},PracticeCOMPFunctions.MIN=function(array){for(var minore=array[0],i=0;i<array.length;i++)array[i]<minore&&(minore=array[i]);return minore},PracticeCOMPFunctions.MAX=function(array){for(var maggiore=array[0],i=0;i<array.length;i++)array[i]>maggiore&&(maggiore=array[i]);return maggiore},PracticeCOMPFunctions}),angular.module("PracticeSimulator").factory("Practice",function($q,$interval,Graph2,PracticeCOMPFunctions){var nodes,instants,maxTime,rawElements,Practice=function(){console.log(PracticeCOMPFunctions),maxTime=0,nodes={length:function(){var key,size=0;for(key in this)this.hasOwnProperty(key)&&size++;return size-1}},instants={},rawElements=Graph2.getElements(),console.log(rawElements);for(var i=0;i<rawElements.nodes.length;i++)nodes[rawElements.nodes[i].id]={IN:{length:function(){var key,size=0;for(key in this)this.hasOwnProperty(key)&&size++;return size-1}},OUT:{length:function(){var key,size=0;for(key in this)this.hasOwnProperty(key)&&size++;return size-1}},TYPE:rawElements.nodes[i].value.type,RISK:rawElements.nodes[i].value.risk,PROVIDER:rawElements.nodes[i].value.provider,MEM:{array:"COMP"==rawElements.nodes[i].value.type||"RES"==rawElements.nodes[i].value.type?[]:[rawElements.nodes[i].value.mem],value:rawElements.nodes[i].value.mem},FUNC:rawElements.nodes[i].value.func};console.log(nodes);for(var i=0;i<rawElements.edges.length;i++)nodes[rawElements.edges[i].v].IN[rawElements.edges[i].u]=!0,nodes[rawElements.edges[i].u].OUT[rawElements.edges[i].v]=!0;for(var i=0;i<rawElements.edges.length;i++)parseInt(rawElements.edges[i].value.label)>maxTime&&(maxTime=parseInt(rawElements.edges[i].value.label));for(var j=0,i=0;i<rawElements.edges.length;i++){for(var k=0;k<rawElements.edges.length;k++)if(parseInt(rawElements.edges[k].value.label)==j)try{instants[j].push({IN:rawElements.edges[k].u,OUT:rawElements.edges[k].v,EDGE:rawElements.edges[k].id})}catch(err){instants[j]=[],instants[j].push({IN:rawElements.edges[k].u,OUT:rawElements.edges[k].v,EDGE:rawElements.edges[k].id})}j++}};return Practice.checkGraph=function(){for(key in nodes){if("COMP"==nodes[key].TYPE&&nodes[key].IN.length()<=1)throw{message:"COMP node '"+key+"' not have at least 2 input edges"};if("RES"==nodes[key].TYPE&&nodes[key].OUT.length()>0)throw{message:"RES node '"+key+"' can't have any exit communication"}}},Practice.runSimulation=function(){var defer=$q.defer(),actualTimeSimulation=0;Graph2.resetHighlight();var interval=$interval(function(){if(actualTimeSimulation>0)for(var i=0;i<instants[actualTimeSimulation-1].length;i++)Graph2.highlightEdge(instants[actualTimeSimulation-1][i].EDGE,!1),Graph2.highlightNode(instants[actualTimeSimulation-1][i].IN,!1),Graph2.highlightNode(instants[actualTimeSimulation-1][i].OUT,!1);for(var i=0;i<instants[actualTimeSimulation].length;i++)Graph2.highlightEdge(instants[actualTimeSimulation][i].EDGE,!0),Graph2.highlightNode(instants[actualTimeSimulation][i].IN,!0),Graph2.highlightNode(instants[actualTimeSimulation][i].OUT,!0);for(var mapArrayOfMemoriesOutput={},i=0;i<instants[actualTimeSimulation].length;i++)try{mapArrayOfMemoriesOutput[instants[actualTimeSimulation][i].OUT].push(nodes[instants[actualTimeSimulation][i].IN].MEM.value)}catch(err){mapArrayOfMemoriesOutput[instants[actualTimeSimulation][i].OUT]=[],mapArrayOfMemoriesOutput[instants[actualTimeSimulation][i].OUT].push(nodes[instants[actualTimeSimulation][i].IN].MEM.value)}for(node in mapArrayOfMemoriesOutput)if("function"==typeof PracticeCOMPFunctions[nodes[node].FUNC]){var temp=PracticeCOMPFunctions[nodes[node].FUNC](mapArrayOfMemoriesOutput[node]);nodes[node].MEM.array.push(temp),nodes[node].MEM.value=PracticeCOMPFunctions[nodes[node].FUNC](nodes[node].MEM.array),Graph2.setNodeMem(node,nodes[node].MEM.value)}else nodes[node].MEM.array.push(mapArrayOfMemoriesOutput[node]),Graph2.setNodeMem(node,nodes[node].MEM.array);Graph2.redesign(),actualTimeSimulation==maxTime&&($interval.cancel(interval),defer.resolve()),actualTimeSimulation++},1e3);return defer.promise},Practice}),angular.module("PracticeSimulator").controller("NetworkSimulator",function($scope,$modal,$interval,$timeout,Graph2,Practice,PracticeCOMPFunctions){function customAlert(message){console.log(message),$scope.alert=!0,$scope.alertMessage=message.message,$timeout(function(){$scope.alert=!1,$scope.alertMessage=""},3e3)}function bindEvent(){for(var nodesEvents=document.getElementsByClassName("node"),i=0;i<nodesEvents.length;i++)angular.element(nodesEvents[i]).on("click",function(){$scope.modifierIsNode=!0,$scope.modifierIsEdge=!1,angular.element(document.getElementById("modifier")).removeClass("hide");var node=Graph2.getRawNode(this.id);$scope.nodeTypeModifier=node.type,$scope.nodeNameModifier=this.id,$scope.nodeDescriptionModifier=node.descr,$scope.nodeGroupModifier=node.provider})}$scope.nameNew="",$scope.descrizioneNew="",$scope.fromNew="",$scope.toNew="",$scope.memNew=0,$scope.timeNew=0,$scope.riskNew=.1,$scope.groupOfNodeNew="",$scope.removeNodeName="",$scope.newGroupName="",$scope.newGroupDescription="",$scope.nodeTypeNew="IN",$scope.nodeTypeModifier="COMP",$scope.nodeFuncModifier="",$scope.nodeNameModifier="",$scope.nodeDescriptionModifier="",$scope.nodeFromModifier="",$scope.nodeToModifier="",$scope.nodeGroupModifier="",$scope.simulationRunning=!1,$scope.funcOfCompNode=[],$scope.statoBackend="Backend Down",$scope.alert=!1;for(type in PracticeCOMPFunctions)$scope.funcOfCompNode.push(type);var nodes=[{id:"nodo1",descr:"nodo presso aruba networks ",type:"IN",provider:"aruba",mem:"1",risk:"0.5"},{id:"nodo2",descr:"nodo presso aws ec2",type:"IN",provider:"AWS",mem:"2",risk:"0.6"},{id:"nodo3",descr:"nodo computazionale di somma",type:"COMP",provider:"telecom",mem:"0",risk:"0.7",func:"SUM"},{id:"nodo4",descr:"nodo di risoluzione",type:"RES",provider:"telecom",mem:"0",risk:"0.9"},{id:"nodo5",descr:"nodo di risoluzione",type:"IN",provider:"VULTR",mem:"2",risk:"0.9"},{id:"nodo6",descr:"nodo di risoluzione",type:"COMP",provider:"VULTR",mem:"0",risk:"0.9",func:"MIN"},{id:"nodo7",descr:"nodo di risoluzione",type:"RES",provider:"ARUBA",mem:"0",risk:"0.9"}],edges=[{u:"nodo1",v:"nodo3",time:0},{u:"nodo2",v:"nodo3",time:0},{u:"nodo5",v:"nodo3",time:0},{u:"nodo3",v:"nodo6",time:1},{u:"nodo3",v:"nodo4",time:2},{u:"nodo3",v:"nodo7",time:3},{u:"nodo6",v:"nodo7",time:4},{u:"nodo5",v:"nodo6",time:0},{u:"nodo2",v:"nodo6",time:0}];Graph2(nodes,edges).then(function(){bindEvent()}),$scope.addNode=function(){if(""!=$scope.nameNew.trim()&&""!=$scope.descrizioneNew.trim()&&""!=$scope.providerNodeNew.trim())try{Graph2.addNode($scope.nameNew.trim(),$scope.descrizioneNew.trim(),$scope.nodeTypeNew,$scope.providerNodeNew.trim(),$scope.memNew,$scope.riskNew,$scope.nodeFunctionNew),$scope.nameNew="",$scope.descrizioneNew="",$scope.providerNodeNew="",$scope.memNew=0,$scope.riskNew=.1}catch(err){customAlert(err)}else customAlert("Not compiled all input form")},$scope.addCommunication=function(){if(""!=$scope.fromNew.trim()&&""!=$scope.toNew.trim())try{Graph2.addEdge($scope.fromNew.trim(),$scope.toNew.trim(),$scope.timeNew),$scope.fromNew="",$scope.toNew="",$scope.timeNew=0}catch(err){customAlert(err)}else customAlert("Not compiled all input form")},$scope.removeNode=function(){if(""!=$scope.removeNodeName.trim())try{Graph2.removeNode($scope.removeNodeName.trim()),$scope.removeNodeName=""}catch(err){customAlert(err)}else customAlert("Not compiled all input form")},$scope.removeEdge=function(){if(""!=$scope.removeComName.trim())try{Graph2.removeEdge($scope.removeComName.trim()),$scope.removeComName=""}catch(err){customAlert(err)}else customAlert("Not compiled all input form")},$scope.hideModifier=function(){angular.element(document.getElementById("modifier")).addClass("hide")},$scope.hideParameters=function(){angular.element(document.getElementById("parameters")).hasClass("slideRight")&&(angular.element(document.getElementById("parameters")).removeClass("slideRight"),Graph2.scale("original"))},$scope.showParameters=function(){angular.element(document.getElementById("parameters")).addClass("slideRight"),Graph2.scale("parameters")},$scope.restartVisualizer=function(){Graph2.resize()},$scope.runSimulation=function(){Graph2.resize();try{$scope.simulationRunning=!0,Practice(),Practice.checkGraph(),Practice.runSimulation().then(function(){$scope.simulationRunning=!1})}catch(err){$scope.simulationRunning=!1,customAlert(err)}},$scope.generateCharts=function(){var modalInstance=$modal.open({templateUrl:"modalCharts.html",size:"lg",resolve:{items:function(){return $scope.items}}});modalInstance.result.then(function(selectedItem){$scope.selected=selectedItem},function(){console.log("Modal dismissed at: "+new Date)})},$scope.saveModifications=function(){Graph2.setNodeDescription($scope.nodeNameModifier,$scope.nodeDescriptionModifier),Graph2.setNodeProvider($scope.nodeNameModifier,$scope.nodeGroupModifier),Graph2.setNodeType($scope.nodeNameModifier,$scope.nodeTypeModifier),Graph2.setNodeFunc($scope.nodeNameModifier,$scope.nodeFuncModifier),Graph2.redesign()}});